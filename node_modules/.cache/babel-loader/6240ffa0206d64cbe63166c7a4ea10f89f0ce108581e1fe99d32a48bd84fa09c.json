{"ast":null,"code":"function stringMath(eq, callback) {\n  if (typeof eq !== 'string') return handleCallback(new TypeError('The [String] argument is expected.'), null);\n  const mulDiv = /([+-]?\\d*\\.?\\d+(?:e[+-]\\d+)?)\\s*([*/])\\s*([+-]?\\d*\\.?\\d+(?:e[+-]\\d+)?)/;\n  const plusMin = /([+-]?\\d*\\.?\\d+(?:e[+-]\\d+)?)\\s*([+-])\\s*([+-]?\\d*\\.?\\d+(?:e[+-]\\d+)?)/;\n  const parentheses = /(\\d)?\\s*\\(([^()]*)\\)\\s*/;\n  var current;\n  while (eq.search(/^\\s*([+-]?\\d*\\.?\\d+(?:e[+-]\\d+)?)\\s*$/) === -1) {\n    eq = fParentheses(eq);\n    if (eq === current) return handleCallback(new SyntaxError('The equation is invalid.'), null);\n    current = eq;\n  }\n  return handleCallback(null, +eq);\n  function fParentheses(eq) {\n    while (eq.search(parentheses) !== -1) {\n      eq = eq.replace(parentheses, function (a, b, c) {\n        c = fMulDiv(c);\n        c = fPlusMin(c);\n        return typeof b === 'string' ? b + '*' + c : c;\n      });\n    }\n    eq = fMulDiv(eq);\n    eq = fPlusMin(eq);\n    return eq;\n  }\n  function fMulDiv(eq) {\n    while (eq.search(mulDiv) !== -1) {\n      eq = eq.replace(mulDiv, function (a) {\n        const sides = mulDiv.exec(a);\n        const result = sides[2] === '*' ? sides[1] * sides[3] : sides[1] / sides[3];\n        return result >= 0 ? '+' + result : result;\n      });\n    }\n    return eq;\n  }\n  function fPlusMin(eq) {\n    eq = eq.replace(/([+-])([+-])(\\d|\\.)/g, function (a, b, c, d) {\n      return (b === c ? '+' : '-') + d;\n    });\n    while (eq.search(plusMin) !== -1) {\n      eq = eq.replace(plusMin, function (a) {\n        const sides = plusMin.exec(a);\n        return sides[2] === '+' ? +sides[1] + +sides[3] : sides[1] - sides[3];\n      });\n    }\n    return eq;\n  }\n  function handleCallback(errObject, result) {\n    if (typeof callback !== 'function') {\n      if (errObject !== null) throw errObject;\n    } else {\n      callback(errObject, result);\n    }\n    return result;\n  }\n}\nif (typeof module !== 'undefined' && typeof exports !== 'undefined' && module.exports) {\n  module.exports = stringMath;\n}","map":{"version":3,"names":["stringMath","eq","callback","handleCallback","TypeError","mulDiv","plusMin","parentheses","current","search","fParentheses","SyntaxError","replace","a","b","c","fMulDiv","fPlusMin","sides","exec","result","d","errObject","module","exports"],"sources":["C:/Users/Adrian/Documents/Coding/react_calculator/node_modules/string-math/string-math.js"],"sourcesContent":["function stringMath(eq, callback) {\r\n  if (typeof eq !== 'string') return handleCallback(new TypeError('The [String] argument is expected.'), null);\r\n  const mulDiv = /([+-]?\\d*\\.?\\d+(?:e[+-]\\d+)?)\\s*([*/])\\s*([+-]?\\d*\\.?\\d+(?:e[+-]\\d+)?)/;\r\n  const plusMin = /([+-]?\\d*\\.?\\d+(?:e[+-]\\d+)?)\\s*([+-])\\s*([+-]?\\d*\\.?\\d+(?:e[+-]\\d+)?)/;\r\n  const parentheses = /(\\d)?\\s*\\(([^()]*)\\)\\s*/;\r\n  var current;\r\n  while (eq.search(/^\\s*([+-]?\\d*\\.?\\d+(?:e[+-]\\d+)?)\\s*$/) === -1) {\r\n    eq = fParentheses(eq);\r\n    if (eq === current) return handleCallback(new SyntaxError('The equation is invalid.'), null);\r\n    current = eq;\r\n  }\r\n  return handleCallback(null, +eq);\r\n\r\n  function fParentheses(eq) {\r\n    while (eq.search(parentheses) !== -1) {\r\n      eq = eq.replace(parentheses, function (a, b, c) {\r\n        c = fMulDiv(c);\r\n        c = fPlusMin(c);\r\n        return typeof b === 'string' ? b + '*' + c : c;\r\n      });\r\n    }\r\n    eq = fMulDiv(eq);\r\n    eq = fPlusMin(eq);\r\n    return eq;\r\n  }\r\n\r\n  function fMulDiv(eq) {\r\n    while (eq.search(mulDiv) !== -1) {\r\n      eq = eq.replace(mulDiv, function (a) {\r\n        const sides = mulDiv.exec(a);\r\n        const result = sides[2] === '*' ? sides[1] * sides[3] : sides[1] / sides[3];\r\n        return result >= 0 ? '+' + result : result;\r\n      });\r\n    }\r\n    return eq;\r\n  }\r\n\r\n  function fPlusMin(eq) {\r\n    eq = eq.replace(/([+-])([+-])(\\d|\\.)/g, function (a, b, c, d) { return (b === c ? '+' : '-') + d; });\r\n    while (eq.search(plusMin) !== -1) {\r\n      eq = eq.replace(plusMin, function (a) {\r\n        const sides = plusMin.exec(a);\r\n        return sides[2] === '+' ? +sides[1] + +sides[3] : sides[1] - sides[3];\r\n      });\r\n    }\r\n    return eq;\r\n  }\r\n\r\n  function handleCallback(errObject, result) {\r\n    if (typeof callback !== 'function') {\r\n      if (errObject !== null) throw errObject;\r\n    } else {\r\n      callback(errObject, result);\r\n    }\r\n    return result;\r\n\r\n  }\r\n\r\n}\r\n\r\nif (typeof module !== 'undefined' && typeof exports !== 'undefined' && module.exports) {\r\n  module.exports = stringMath;\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}