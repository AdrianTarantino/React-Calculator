{"ast":null,"code":"import _slicedToArray from\"C:/Users/Adrian/Documents/Coding/react-calculator/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from'react';import stringMath from'string-math';// Library used for taking string of math formula and solving.\nimport{Button}from'antd';import'./CalculatorComponents.css';/** \r\n * Component used to represent each button\r\n * on the calculator.\r\n */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function CalculatorButton(_ref){var buttonText=_ref.buttonText,onClick=_ref.onClick;return/*#__PURE__*/_jsx(Button,{className:'CalculatorButton',onClick:onClick,children:buttonText});}/**\r\n * Component used to represent each row of buttons\r\n * on the calculator.\r\n */function CalculatorButtonRow(_ref2){var buttonTexts=_ref2.buttonTexts,onClicks=_ref2.onClicks;var cells=[];for(var i=0;i<buttonTexts.length;i++){cells.push(/*#__PURE__*/_jsx(CalculatorButton,{buttonText:buttonTexts[i],onClick:onClicks[i]}));}return/*#__PURE__*/_jsx(\"tr\",{children:cells});}/**\r\n * Component used to represent the screen\r\n * of the calculator.\r\n */function CalculatorScreen(_ref3){var displayText=_ref3.displayText;return/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"div\",{className:'CalculatorScreen',children:/*#__PURE__*/_jsx(\"p\",{className:'CalculatorScreenText',children:displayText})})});}/**\r\n * Component used to represent the base of the calculator.\r\n */function CalculatorBase(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),screenText=_useState2[0],setScreenText=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),canAddSpecialChar=_useState4[0],setCanAddSpecialChar=_useState4[1];var specialChars=[0,'+','-','*','/'];var addCharToScreen=function addCharToScreen(char){var isSpecialChar=false;for(var i=0;i<specialChars.length;i++){if(char===specialChars[i]){isSpecialChar=true;break;}}if(!canAddSpecialChar&&isSpecialChar){return;}setScreenText([screenText,char].join(''));if(isSpecialChar){setCanAddSpecialChar(false);return;}setCanAddSpecialChar(true);};var clearScreen=function clearScreen(){setCanAddSpecialChar(false);setScreenText('');};var solveEqueation=function solveEqueation(){try{var solvedEquation=stringMath(screenText);setScreenText(solvedEquation);}catch(error){clearScreen();}};return/*#__PURE__*/_jsx(\"div\",{className:'CalculatorBase',children:/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(CalculatorScreen,{displayText:screenText})}),/*#__PURE__*/_jsx(CalculatorButtonRow,{buttonTexts:[7,8,9,'/'],onClicks:[function(){addCharToScreen(7);},function(){addCharToScreen(8);},function(){addCharToScreen(9);},function(){addCharToScreen('/');}]}),/*#__PURE__*/_jsx(CalculatorButtonRow,{buttonTexts:[4,5,6,'x'],onClicks:[function(){addCharToScreen(4);},function(){addCharToScreen(5);},function(){addCharToScreen(6);},function(){addCharToScreen('*');}]}),/*#__PURE__*/_jsx(CalculatorButtonRow,{buttonTexts:[1,2,3,'-'],onClicks:[function(){addCharToScreen(1);},function(){addCharToScreen(2);},function(){addCharToScreen(3);},function(){addCharToScreen('-');}]}),/*#__PURE__*/_jsx(CalculatorButtonRow,{buttonTexts:['C',0,'=','+'],onClicks:[clearScreen,function(){addCharToScreen(0);},solveEqueation,function(){addCharToScreen('+');}]})]})});}export default CalculatorBase;","map":{"version":3,"names":["useState","stringMath","Button","CalculatorButton","buttonText","onClick","CalculatorButtonRow","buttonTexts","onClicks","cells","i","length","push","CalculatorScreen","displayText","CalculatorBase","screenText","setScreenText","canAddSpecialChar","setCanAddSpecialChar","specialChars","addCharToScreen","char","isSpecialChar","join","clearScreen","solveEqueation","solvedEquation","error"],"sources":["C:/Users/Adrian/Documents/Coding/react-calculator/src/calculator-components/CalculatorComponents.js"],"sourcesContent":["import { useState } from 'react';\r\nimport stringMath from 'string-math';   // Library used for taking string of math formula and solving.\r\nimport { Button } from 'antd';\r\nimport './CalculatorComponents.css';\r\n\r\n/** \r\n * Component used to represent each button\r\n * on the calculator.\r\n */\r\nfunction CalculatorButton({ buttonText, onClick }) {\r\n    return(\r\n        <Button className={ 'CalculatorButton' } onClick={ onClick }>{ buttonText }</Button>\r\n    );\r\n} \r\n\r\n/**\r\n * Component used to represent each row of buttons\r\n * on the calculator.\r\n */\r\nfunction CalculatorButtonRow({ buttonTexts, onClicks}) {\r\n    let cells = [];\r\n\r\n    for(let i = 0; i < buttonTexts.length; i ++) {\r\n        cells.push(<CalculatorButton buttonText={ buttonTexts[i] } onClick={ onClicks[i] }/>);\r\n    }\r\n\r\n    return(\r\n        <tr>\r\n            { cells }\r\n        </tr>    \r\n    );\r\n}\r\n\r\n/**\r\n * Component used to represent the screen\r\n * of the calculator.\r\n */\r\nfunction CalculatorScreen({ displayText }) {\r\n    return(\r\n        <td><div className={ 'CalculatorScreen' }>\r\n            <p className={ 'CalculatorScreenText' }>{ displayText }</p>\r\n        </div></td>\r\n    );\r\n}\r\n\r\n/**\r\n * Component used to represent the base of the calculator.\r\n */\r\nfunction CalculatorBase() {\r\n    const [screenText, setScreenText] = useState('');\r\n    const [canAddSpecialChar, setCanAddSpecialChar] = useState(false);\r\n    const specialChars = [0, '+', '-', '*', '/'];\r\n\r\n    const addCharToScreen = (char) => {\r\n        let isSpecialChar = false;\r\n        for(let i = 0; i < specialChars.length; i ++) {\r\n            if(char === specialChars[i]) { \r\n                isSpecialChar = true; \r\n                break;\r\n            }\r\n        }\r\n\r\n        if(!canAddSpecialChar && isSpecialChar) { return; }\r\n        setScreenText([screenText, char].join(''));\r\n\r\n        if(isSpecialChar) { \r\n            setCanAddSpecialChar(false);\r\n            return;\r\n        }\r\n        setCanAddSpecialChar(true);\r\n    }\r\n\r\n    const clearScreen = () => {\r\n        setCanAddSpecialChar(false);\r\n        setScreenText('');\r\n    };\r\n\r\n    const solveEqueation = () => {\r\n        try {\r\n            const solvedEquation = stringMath(screenText);\r\n            setScreenText(solvedEquation);\r\n        }\r\n\r\n        catch(error) {\r\n            clearScreen();\r\n        }\r\n    };\r\n\r\n    return(\r\n        <div className={ 'CalculatorBase' }>\r\n            <table>\r\n                <tr>\r\n                    <CalculatorScreen displayText={ screenText }/>\r\n                </tr>\r\n                <CalculatorButtonRow buttonTexts={ [7, 8, 9, '/'] } onClicks={ [() => { addCharToScreen(7); }, () => { addCharToScreen(8); }, () => { addCharToScreen(9); }, () => { addCharToScreen('/'); }] }/>\r\n                <CalculatorButtonRow buttonTexts={ [4, 5, 6, 'x'] } onClicks={ [() => { addCharToScreen(4); }, () => { addCharToScreen(5); }, () => { addCharToScreen(6); }, () => { addCharToScreen('*'); }] }/>\r\n                <CalculatorButtonRow buttonTexts={ [1, 2, 3, '-'] } onClicks={ [() => { addCharToScreen(1); }, () => { addCharToScreen(2); }, () => { addCharToScreen(3); }, () => { addCharToScreen('-'); }] }/>\r\n                <CalculatorButtonRow buttonTexts={ ['C', 0, '=', '+'] } onClicks={ [clearScreen, () => { addCharToScreen(0); }, solveEqueation, () => { addCharToScreen('+'); }] }/>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CalculatorBase;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}