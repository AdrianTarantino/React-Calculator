{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adrian\\\\Documents\\\\Coding\\\\react_calculator\\\\src\\\\calculator-components\\\\CalculatorComponents.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport stringMath from 'string-math';\nimport './CalculatorComponents.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CalculatorButton(_ref) {\n  let {\n    buttonValue,\n    onClick\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: 'CalculatorButton',\n    onClick: onClick,\n    children: buttonValue\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n}\n_c = CalculatorButton;\nfunction CalculatorButtonRow(_ref2) {\n  let {\n    buttonValues,\n    onClicks\n  } = _ref2;\n  let cells = [];\n  for (let i = 0; i < buttonValues.length; i++) {\n    cells.push( /*#__PURE__*/_jsxDEV(CalculatorButton, {\n      buttonValue: buttonValues[i],\n      onClick: onClicks[i]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 20\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: cells\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n_c2 = CalculatorButtonRow;\nfunction CalculatorScreen(_ref3) {\n  let {\n    displayText\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'CalculatorScreen',\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      className: 'CalculatorScreenText',\n      children: displayText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_c3 = CalculatorScreen;\nfunction CalculatorBase() {\n  _s();\n  const [screenText, setScreenText] = useState(0);\n  const addCharToScreen = char => {\n    if (screenText.length === 1 && screenText[0] == 0) {\n      setScreenText(char);\n      return;\n    }\n    setScreenText([screenText, char].join(''));\n  };\n  const clearScreen = () => {\n    setScreenText('0');\n  };\n  const solveEqueation = () => {\n    const solvedEquation = stringMath(screenText);\n    setScreenText(solvedEquation);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'CalculatorBase',\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(CalculatorScreen, {\n          displayText: screenText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CalculatorButtonRow, {\n        buttonValues: [7, 8, 9, '/'],\n        onClicks: [() => {\n          addCharToScreen(7);\n        }, () => {\n          addCharToScreen(8);\n        }, () => {\n          addCharToScreen(9);\n        }, () => {\n          addCharToScreen('/');\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CalculatorButtonRow, {\n        buttonValues: [4, 5, 6, 'x'],\n        onClicks: [() => {\n          addCharToScreen(4);\n        }, () => {\n          addCharToScreen(5);\n        }, () => {\n          addCharToScreen(6);\n        }, () => {\n          addCharToScreen('*');\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CalculatorButtonRow, {\n        buttonValues: [1, 2, 3, '-'],\n        onClicks: [() => {\n          addCharToScreen(1);\n        }, () => {\n          addCharToScreen(2);\n        }, () => {\n          addCharToScreen(3);\n        }, () => {\n          addCharToScreen('-');\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CalculatorButtonRow, {\n        buttonValues: ['C', 0, '=', '+'],\n        onClicks: [clearScreen, () => {\n          addCharToScreen(0);\n        }, solveEqueation, () => {\n          addCharToScreen('+');\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_s(CalculatorBase, \"6pnidxfRPm2VI6CceB9G4IxVbhA=\");\n_c4 = CalculatorBase;\nexport default CalculatorBase;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"CalculatorButton\");\n$RefreshReg$(_c2, \"CalculatorButtonRow\");\n$RefreshReg$(_c3, \"CalculatorScreen\");\n$RefreshReg$(_c4, \"CalculatorBase\");","map":{"version":3,"names":["useState","stringMath","CalculatorButton","buttonValue","onClick","CalculatorButtonRow","buttonValues","onClicks","cells","i","length","push","CalculatorScreen","displayText","CalculatorBase","screenText","setScreenText","addCharToScreen","char","join","clearScreen","solveEqueation","solvedEquation"],"sources":["C:/Users/Adrian/Documents/Coding/react_calculator/src/calculator-components/CalculatorComponents.js"],"sourcesContent":["import { useState } from 'react';\r\nimport stringMath from 'string-math';\r\nimport './CalculatorComponents.css';\r\n\r\nfunction CalculatorButton({ buttonValue, onClick }) {\r\n    return(\r\n        <button className={ 'CalculatorButton' } onClick={ onClick }>{ buttonValue }</button>\r\n    );\r\n} \r\n\r\nfunction CalculatorButtonRow({ buttonValues, onClicks}) {\r\n    let cells = [];\r\n    \r\n    for(let i = 0; i < buttonValues.length; i ++) {\r\n        cells.push(<CalculatorButton buttonValue={ buttonValues[i] } onClick={ onClicks[i] }/>);\r\n    }\r\n\r\n    return(\r\n        <tr>\r\n            { cells }\r\n        </tr>    \r\n    );\r\n}\r\n\r\nfunction CalculatorScreen({ displayText }) {\r\n    return(\r\n        <div className={ 'CalculatorScreen' }>\r\n            <p className={ 'CalculatorScreenText' }>{ displayText }</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction CalculatorBase() {\r\n    const [screenText, setScreenText] = useState(0);\r\n\r\n    const addCharToScreen = (char) => {\r\n        if(screenText.length === 1 && screenText[0] == 0) { \r\n            setScreenText(char); \r\n            return;\r\n        }\r\n\r\n        setScreenText([screenText, char].join(''));\r\n    }\r\n\r\n    const clearScreen = () => {\r\n        setScreenText('0');\r\n    };\r\n\r\n    const solveEqueation = () => {\r\n        const solvedEquation = stringMath(screenText);\r\n        setScreenText(solvedEquation);\r\n    };\r\n\r\n    return(\r\n        <div className={ 'CalculatorBase' }>\r\n            <table>\r\n                <tr>\r\n                    <CalculatorScreen displayText={ screenText }/>\r\n                </tr>\r\n                <CalculatorButtonRow buttonValues={ [7, 8, 9, '/'] } onClicks={ [() => { addCharToScreen(7); }, () => { addCharToScreen(8); }, () => { addCharToScreen(9); }, () => { addCharToScreen('/'); }] }/>\r\n                <CalculatorButtonRow buttonValues={ [4, 5, 6, 'x'] } onClicks={ [() => { addCharToScreen(4); }, () => { addCharToScreen(5); }, () => { addCharToScreen(6); }, () => { addCharToScreen('*'); }] }/>\r\n                <CalculatorButtonRow buttonValues={ [1, 2, 3, '-'] } onClicks={ [() => { addCharToScreen(1); }, () => { addCharToScreen(2); }, () => { addCharToScreen(3); }, () => { addCharToScreen('-'); }] }/>\r\n                <CalculatorButtonRow buttonValues={ ['C', 0, '=', '+'] } onClicks={ [clearScreen, () => { addCharToScreen(0); }, solveEqueation, () => { addCharToScreen('+'); }] }/>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CalculatorBase;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}